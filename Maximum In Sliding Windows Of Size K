#include<bits/stdc++.h>
vector<int> slidingWindowMaximum(vector<int> &nums, int &k)
{
    deque<int>dq;
    vector<int>ans;
    for(int i=0;i<k-1;i++){
        if(dq.size()==0)dq.push_back(nums[i]);
        else{
            while(!dq.empty() and dq.back()<nums[i])dq.pop_back();
            dq.push_back(nums[i]);
        }
    }
    for(int i=k-1;i<nums.size();i++){
         while(!dq.empty() and dq.back()<nums[i])dq.pop_back();
         dq.push_back(nums[i]);
        ans.push_back(dq.front());
        if(dq.front()==nums[i-(k-1)]){
            dq.pop_front();
        }
    }
    return ans;
}
